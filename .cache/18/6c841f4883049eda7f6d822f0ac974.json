{"id":"node_modules/sparql-http-client/StreamClient.js","dependencies":[{"name":"/home/osdajigu/SPARQL/package.json","includedInParent":true,"mtime":1656012431902},{"name":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/package.json","includedInParent":true,"mtime":1656013468502},{"name":"./BaseClient","loc":{"line":1,"column":27,"index":27},"parent":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/StreamClient.js","resolved":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/BaseClient.js"},{"name":"./Endpoint","loc":{"line":2,"column":25,"index":68},"parent":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/StreamClient.js","resolved":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/Endpoint.js"},{"name":"./StreamQuery","loc":{"line":3,"column":28,"index":110},"parent":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/StreamClient.js","resolved":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/StreamQuery.js"},{"name":"./StreamStore","loc":{"line":4,"column":28,"index":155},"parent":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/StreamClient.js","resolved":"/home/osdajigu/SPARQL/node_modules/sparql-http-client/StreamStore.js"}],"generated":{"js":"const BaseClient = require('./BaseClient')\nconst Endpoint = require('./Endpoint')\nconst StreamQuery = require('./StreamQuery')\nconst StreamStore = require('./StreamStore')\n\n/**\n * The default client implementation which returns SPARQL response as RDF/JS streams\n *\n * @property {StreamQuery} query\n * @property {StreamStore} store\n */\nclass StreamClient extends BaseClient {\n  /**\n   * @param {Object} options\n   * @param {string} options.endpointUrl SPARQL Query endpoint URL\n   * @param {fetch} [options.fetch=nodeify-fetch] fetch implementation\n   * @param {HeadersInit} [options.headers] HTTP headers to send with every endpoint request\n   * @param {string} [options.password] password used for basic authentication\n   * @param {string} [options.storeUrl] Graph Store URL\n   * @param {string} [options.updateUrl] SPARQL Update endpoint URL\n   * @param {string} [options.user] user used for basic authentication\n   * @param {factory} [options.factory] RDF/JS DataFactory\n   */\n  constructor (options) {\n    super({\n      endpoint: new Endpoint(options),\n      factory: options.factory,\n      Query: StreamQuery,\n      Store: StreamStore,\n      ...options\n    })\n  }\n}\n\nmodule.exports = StreamClient\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sparql-http-client/StreamClient.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"node_modules/sparql-http-client/StreamClient.js":"const BaseClient = require('./BaseClient')\nconst Endpoint = require('./Endpoint')\nconst StreamQuery = require('./StreamQuery')\nconst StreamStore = require('./StreamStore')\n\n/**\n * The default client implementation which returns SPARQL response as RDF/JS streams\n *\n * @property {StreamQuery} query\n * @property {StreamStore} store\n */\nclass StreamClient extends BaseClient {\n  /**\n   * @param {Object} options\n   * @param {string} options.endpointUrl SPARQL Query endpoint URL\n   * @param {fetch} [options.fetch=nodeify-fetch] fetch implementation\n   * @param {HeadersInit} [options.headers] HTTP headers to send with every endpoint request\n   * @param {string} [options.password] password used for basic authentication\n   * @param {string} [options.storeUrl] Graph Store URL\n   * @param {string} [options.updateUrl] SPARQL Update endpoint URL\n   * @param {string} [options.user] user used for basic authentication\n   * @param {factory} [options.factory] RDF/JS DataFactory\n   */\n  constructor (options) {\n    super({\n      endpoint: new Endpoint(options),\n      factory: options.factory,\n      Query: StreamQuery,\n      Store: StreamStore,\n      ...options\n    })\n  }\n}\n\nmodule.exports = StreamClient\n"},"lineCount":36}},"error":null,"hash":"dee4158eb5c4bad481c5f556f6b44213","cacheData":{"env":{}}}