{"id":"node_modules/sparql-http-client/StreamStore.js","dependencies":[{"name":"/home/sebastian/Documents/proyecto2022/sparql/package.json","includedInParent":true,"mtime":1656026549273},{"name":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/package.json","includedInParent":true,"mtime":1655989915065},{"name":"util","loc":{"line":1,"column":30,"index":30},"parent":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/StreamStore.js","resolved":"/home/sebastian/.nvm/versions/node/v18.4.0/lib/node_modules/parcel-bundler/node_modules/util/util.js"},{"name":"rdf-transform-triple-to-quad","loc":{"line":2,"column":38,"index":76},"parent":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/StreamStore.js","resolved":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/rdf-transform-triple-to-quad/index.js"},{"name":"@rdfjs/data-model","loc":{"line":3,"column":20,"index":128},"parent":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/StreamStore.js","resolved":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/@rdfjs/data-model/index.js"},{"name":"@rdfjs/parser-n3","loc":{"line":4,"column":25,"index":174},"parent":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/StreamStore.js","resolved":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/@rdfjs/parser-n3/index.js"},{"name":"readable-stream","loc":{"line":5,"column":29,"index":223},"parent":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/StreamStore.js","resolved":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/readable-stream/readable-browser.js"},{"name":"./lib/checkResponse","loc":{"line":6,"column":30,"index":272},"parent":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/StreamStore.js","resolved":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/lib/checkResponse.js"},{"name":"./lib/QuadStreamSeparator","loc":{"line":7,"column":36,"index":331},"parent":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/StreamStore.js","resolved":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/lib/QuadStreamSeparator.js"}],"generated":{"js":"const { promisify } = require('util')\nconst TripleToQuadTransform = require('rdf-transform-triple-to-quad')\nconst rdf = require('@rdfjs/data-model')\nconst N3Parser = require('@rdfjs/parser-n3')\nconst { finished } = require('readable-stream')\nconst checkResponse = require('./lib/checkResponse')\nconst QuadStreamSeparator = require('./lib/QuadStreamSeparator')\n\n/**\n * Accesses stores with SPARQL Graph Protocol\n */\nclass StreamStore {\n  /**\n   *\n   * @param {Object} init\n   * @param {Endpoint} init.endpoint\n   * @param {DataFactory} [init.factory=@rdfjs/data-model]\n   * @param {number} [maxQuadsPerRequest]\n   */\n  constructor ({ endpoint, factory = rdf, maxQuadsPerRequest }) {\n    this.endpoint = endpoint\n    this.factory = factory\n    this.maxQuadsPerRequest = maxQuadsPerRequest\n  }\n\n  /**\n   * Gets a graph triples from the store\n   * @param {NamedNode} graph\n   * @return {Promise<Stream>}\n   */\n  async get (graph) {\n    return this.read({ method: 'GET', graph })\n  }\n\n  /**\n   * Adds triples to a graph\n   * @param {Stream} stream\n   * @return {Promise<void>}\n   */\n  async post (stream) {\n    return this.write({ method: 'POST', stream })\n  }\n\n  /**\n   * Replaces graph with triples\n   * @param {Stream} stream\n   * @return {Promise<void>}\n   */\n  async put (stream) {\n    return this.write({ firstMethod: 'PUT', method: 'POST', stream })\n  }\n\n  async read ({ method, graph }) {\n    const url = new URL(this.endpoint.storeUrl)\n\n    if (graph.termType !== 'DefaultGraph') {\n      url.searchParams.append('graph', graph.value)\n    }\n\n    return this.endpoint.fetch(url, {\n      method,\n      headers: this.endpoint.mergeHeaders({ accept: 'application/n-triples' })\n    }).then(async res => {\n      await checkResponse(res)\n\n      const parser = new N3Parser({ factory: this.factory })\n      const tripleToQuad = new TripleToQuadTransform(graph, { factory: this.factory })\n\n      return parser.import(res.body).pipe(tripleToQuad)\n    })\n  }\n\n  async write ({ firstMethod, method, stream }) {\n    const seen = new Set()\n    let requestEnd = null\n\n    const splitter = new QuadStreamSeparator({\n      maxQuadsPerStream: this.maxQuadsPerRequest,\n      change: async stream => {\n        if (requestEnd) {\n          await requestEnd\n        }\n\n        const currentMethod = seen.has(splitter.graph.value) ? method : (firstMethod || method)\n\n        requestEnd = this.writeRequest(currentMethod, splitter.graph, stream)\n\n        seen.add(splitter.graph.value)\n      }\n    })\n\n    stream.pipe(splitter)\n\n    await promisify(finished)(splitter)\n    await requestEnd\n  }\n\n  async writeRequest (method, graph, stream) {\n    const url = new URL(this.endpoint.storeUrl)\n\n    if (graph.termType !== 'DefaultGraph') {\n      url.searchParams.append('graph', graph.value)\n    }\n\n    const res = await this.endpoint.fetch(url, {\n      method,\n      headers: this.endpoint.mergeHeaders({ 'content-type': 'application/n-triples' }),\n      body: stream\n    })\n\n    await checkResponse(res)\n  }\n}\n\nmodule.exports = StreamStore\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sparql-http-client/StreamStore.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}}],"sources":{"node_modules/sparql-http-client/StreamStore.js":"const { promisify } = require('util')\nconst TripleToQuadTransform = require('rdf-transform-triple-to-quad')\nconst rdf = require('@rdfjs/data-model')\nconst N3Parser = require('@rdfjs/parser-n3')\nconst { finished } = require('readable-stream')\nconst checkResponse = require('./lib/checkResponse')\nconst QuadStreamSeparator = require('./lib/QuadStreamSeparator')\n\n/**\n * Accesses stores with SPARQL Graph Protocol\n */\nclass StreamStore {\n  /**\n   *\n   * @param {Object} init\n   * @param {Endpoint} init.endpoint\n   * @param {DataFactory} [init.factory=@rdfjs/data-model]\n   * @param {number} [maxQuadsPerRequest]\n   */\n  constructor ({ endpoint, factory = rdf, maxQuadsPerRequest }) {\n    this.endpoint = endpoint\n    this.factory = factory\n    this.maxQuadsPerRequest = maxQuadsPerRequest\n  }\n\n  /**\n   * Gets a graph triples from the store\n   * @param {NamedNode} graph\n   * @return {Promise<Stream>}\n   */\n  async get (graph) {\n    return this.read({ method: 'GET', graph })\n  }\n\n  /**\n   * Adds triples to a graph\n   * @param {Stream} stream\n   * @return {Promise<void>}\n   */\n  async post (stream) {\n    return this.write({ method: 'POST', stream })\n  }\n\n  /**\n   * Replaces graph with triples\n   * @param {Stream} stream\n   * @return {Promise<void>}\n   */\n  async put (stream) {\n    return this.write({ firstMethod: 'PUT', method: 'POST', stream })\n  }\n\n  async read ({ method, graph }) {\n    const url = new URL(this.endpoint.storeUrl)\n\n    if (graph.termType !== 'DefaultGraph') {\n      url.searchParams.append('graph', graph.value)\n    }\n\n    return this.endpoint.fetch(url, {\n      method,\n      headers: this.endpoint.mergeHeaders({ accept: 'application/n-triples' })\n    }).then(async res => {\n      await checkResponse(res)\n\n      const parser = new N3Parser({ factory: this.factory })\n      const tripleToQuad = new TripleToQuadTransform(graph, { factory: this.factory })\n\n      return parser.import(res.body).pipe(tripleToQuad)\n    })\n  }\n\n  async write ({ firstMethod, method, stream }) {\n    const seen = new Set()\n    let requestEnd = null\n\n    const splitter = new QuadStreamSeparator({\n      maxQuadsPerStream: this.maxQuadsPerRequest,\n      change: async stream => {\n        if (requestEnd) {\n          await requestEnd\n        }\n\n        const currentMethod = seen.has(splitter.graph.value) ? method : (firstMethod || method)\n\n        requestEnd = this.writeRequest(currentMethod, splitter.graph, stream)\n\n        seen.add(splitter.graph.value)\n      }\n    })\n\n    stream.pipe(splitter)\n\n    await promisify(finished)(splitter)\n    await requestEnd\n  }\n\n  async writeRequest (method, graph, stream) {\n    const url = new URL(this.endpoint.storeUrl)\n\n    if (graph.termType !== 'DefaultGraph') {\n      url.searchParams.append('graph', graph.value)\n    }\n\n    const res = await this.endpoint.fetch(url, {\n      method,\n      headers: this.endpoint.mergeHeaders({ 'content-type': 'application/n-triples' }),\n      body: stream\n    })\n\n    await checkResponse(res)\n  }\n}\n\nmodule.exports = StreamStore\n"},"lineCount":116}},"error":null,"hash":"a1e6c6de3d5b8aa2707bb5ef64ae3427","cacheData":{"env":{}}}