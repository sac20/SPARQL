{"id":"node_modules/sparql-http-client/RawQuery.js","dependencies":[{"name":"/home/sebastian/Documents/proyecto2022/sparql/package.json","includedInParent":true,"mtime":1656026549273},{"name":"/home/sebastian/Documents/proyecto2022/sparql/node_modules/sparql-http-client/package.json","includedInParent":true,"mtime":1655989915065}],"generated":{"js":"/**\n * A base query class which performs HTTP requests for the different SPARQL query forms\n */\nclass RawQuery {\n  /**\n   * @param {Object} init\n   * @param {Endpoint} init.endpoint\n   */\n  constructor ({ endpoint }) {\n    /** @member {Endpoint} */\n    this.endpoint = endpoint\n  }\n\n  /**\n   * Performs an ASK query\n   * By default uses HTTP GET with query string\n   *\n   * @param {string} query SPARQL ASK query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Response>}\n   */\n  async ask (query, { headers, operation = 'get' } = {}) {\n    headers = this.endpoint.mergeHeaders(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', 'application/sparql-results+json')\n    }\n\n    return this.endpoint[operation](query, { headers })\n  }\n\n  /**\n   * Performs a CONSTRUCT/DESCRIBE query\n   * By default uses HTTP GET with query string\n   *\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Response>}\n   */\n  async construct (query, { headers, operation = 'get' } = {}) {\n    headers = new this.endpoint.fetch.Headers(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', 'application/n-triples')\n    }\n\n    return this.endpoint[operation](query, { headers })\n  }\n\n  /**\n   * Performs a SELECT query\n   * By default uses HTTP GET with query string\n   *\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Response>}\n   */\n  async select (query, { headers, operation = 'get' } = {}) {\n    headers = this.endpoint.mergeHeaders(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', 'application/sparql-results+json')\n    }\n\n    return this.endpoint[operation](query, { headers })\n  }\n\n  /**\n   * Performs a SELECT query\n   * By default uses HTTP POST with form-encoded body\n   *\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='postUrlencoded']\n   * @return {Promise<Response>}\n   */\n  async update (query, { headers, operation = 'postUrlencoded' } = {}) {\n    headers = new this.endpoint.fetch.Headers(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', '*/*')\n    }\n\n    return this.endpoint[operation](query, { headers, update: true })\n  }\n}\n\nmodule.exports = RawQuery\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sparql-http-client/RawQuery.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}}],"sources":{"node_modules/sparql-http-client/RawQuery.js":"/**\n * A base query class which performs HTTP requests for the different SPARQL query forms\n */\nclass RawQuery {\n  /**\n   * @param {Object} init\n   * @param {Endpoint} init.endpoint\n   */\n  constructor ({ endpoint }) {\n    /** @member {Endpoint} */\n    this.endpoint = endpoint\n  }\n\n  /**\n   * Performs an ASK query\n   * By default uses HTTP GET with query string\n   *\n   * @param {string} query SPARQL ASK query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Response>}\n   */\n  async ask (query, { headers, operation = 'get' } = {}) {\n    headers = this.endpoint.mergeHeaders(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', 'application/sparql-results+json')\n    }\n\n    return this.endpoint[operation](query, { headers })\n  }\n\n  /**\n   * Performs a CONSTRUCT/DESCRIBE query\n   * By default uses HTTP GET with query string\n   *\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Response>}\n   */\n  async construct (query, { headers, operation = 'get' } = {}) {\n    headers = new this.endpoint.fetch.Headers(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', 'application/n-triples')\n    }\n\n    return this.endpoint[operation](query, { headers })\n  }\n\n  /**\n   * Performs a SELECT query\n   * By default uses HTTP GET with query string\n   *\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Response>}\n   */\n  async select (query, { headers, operation = 'get' } = {}) {\n    headers = this.endpoint.mergeHeaders(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', 'application/sparql-results+json')\n    }\n\n    return this.endpoint[operation](query, { headers })\n  }\n\n  /**\n   * Performs a SELECT query\n   * By default uses HTTP POST with form-encoded body\n   *\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='postUrlencoded']\n   * @return {Promise<Response>}\n   */\n  async update (query, { headers, operation = 'postUrlencoded' } = {}) {\n    headers = new this.endpoint.fetch.Headers(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', '*/*')\n    }\n\n    return this.endpoint[operation](query, { headers, update: true })\n  }\n}\n\nmodule.exports = RawQuery\n"},"lineCount":96}},"error":null,"hash":"ffdd31fbb04c23ed75ca3e224e829339","cacheData":{"env":{}}}