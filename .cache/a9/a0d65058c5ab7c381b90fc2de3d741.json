{"id":"node_modules/sparql-http-client/StreamQuery.js","dependencies":[{"name":"/home/osdajigu/test_sparql/package.json","includedInParent":true,"mtime":1656005416952},{"name":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/package.json","includedInParent":true,"mtime":1655993721831},{"name":"@rdfjs/data-model","loc":{"line":1,"column":20,"index":20},"parent":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/StreamQuery.js","resolved":"/home/osdajigu/test_sparql/node_modules/@rdfjs/data-model/index.js"},{"name":"@rdfjs/parser-n3","loc":{"line":2,"column":25,"index":66},"parent":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/StreamQuery.js","resolved":"/home/osdajigu/test_sparql/node_modules/@rdfjs/parser-n3/index.js"},{"name":"./lib/checkResponse","loc":{"line":3,"column":30,"index":116},"parent":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/StreamQuery.js","resolved":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/lib/checkResponse.js"},{"name":"./RawQuery","loc":{"line":4,"column":25,"index":164},"parent":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/StreamQuery.js","resolved":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/RawQuery.js"},{"name":"./ResultParser","loc":{"line":5,"column":29,"index":207},"parent":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/StreamQuery.js","resolved":"/home/osdajigu/test_sparql/node_modules/sparql-http-client/ResultParser.js"}],"generated":{"js":"const rdf = require('@rdfjs/data-model')\nconst N3Parser = require('@rdfjs/parser-n3')\nconst checkResponse = require('./lib/checkResponse')\nconst RawQuery = require('./RawQuery')\nconst ResultParser = require('./ResultParser')\n\n/**\n * Extends RawQuery by wrapping response body streams as RDF/JS Streams\n */\nclass StreamQuery extends RawQuery {\n  /**\n   * @param {Object} init\n   * @param {Endpoint} init.endpoint\n   * @param {DataFactory} [init.factory=@rdfjs/data-model]\n   */\n  constructor ({ endpoint, factory = rdf }) {\n    super({ endpoint })\n\n    /** @member {DataFactory} */\n    this.factory = factory\n  }\n\n  /**\n   * @param {string} query SPARQL ASK query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<boolean>}\n   */\n  async ask (query, { headers, operation } = {}) {\n    const res = await super.ask(query, { headers, operation })\n\n    await checkResponse(res)\n\n    const json = await res.json()\n\n    return json.boolean\n  }\n\n  /**\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Stream>}\n   */\n  async construct (query, { headers, operation } = {}) {\n    headers = new this.endpoint.fetch.Headers(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', 'application/n-triples, text/turtle')\n    }\n\n    const res = await super.construct(query, { headers, operation })\n\n    await checkResponse(res)\n\n    const parser = new N3Parser({ factory: this.factory })\n\n    return parser.import(res.body)\n  }\n\n  /**\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Stream>}\n   */\n  async select (query, { headers, operation } = {}) {\n    const res = await super.select(query, { headers, operation })\n\n    await checkResponse(res)\n\n    const parser = new ResultParser({ factory: this.factory })\n\n    return res.body.pipe(parser)\n  }\n\n  /**\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='postUrlencoded']\n   * @return {Promise<void>}\n   */\n  async update (query, { headers, operation } = {}) {\n    const res = await super.update(query, { headers, operation })\n\n    await checkResponse(res)\n  }\n}\n\nmodule.exports = StreamQuery\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sparql-http-client/StreamQuery.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}}],"sources":{"node_modules/sparql-http-client/StreamQuery.js":"const rdf = require('@rdfjs/data-model')\nconst N3Parser = require('@rdfjs/parser-n3')\nconst checkResponse = require('./lib/checkResponse')\nconst RawQuery = require('./RawQuery')\nconst ResultParser = require('./ResultParser')\n\n/**\n * Extends RawQuery by wrapping response body streams as RDF/JS Streams\n */\nclass StreamQuery extends RawQuery {\n  /**\n   * @param {Object} init\n   * @param {Endpoint} init.endpoint\n   * @param {DataFactory} [init.factory=@rdfjs/data-model]\n   */\n  constructor ({ endpoint, factory = rdf }) {\n    super({ endpoint })\n\n    /** @member {DataFactory} */\n    this.factory = factory\n  }\n\n  /**\n   * @param {string} query SPARQL ASK query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<boolean>}\n   */\n  async ask (query, { headers, operation } = {}) {\n    const res = await super.ask(query, { headers, operation })\n\n    await checkResponse(res)\n\n    const json = await res.json()\n\n    return json.boolean\n  }\n\n  /**\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Stream>}\n   */\n  async construct (query, { headers, operation } = {}) {\n    headers = new this.endpoint.fetch.Headers(headers)\n\n    if (!headers.has('accept')) {\n      headers.set('accept', 'application/n-triples, text/turtle')\n    }\n\n    const res = await super.construct(query, { headers, operation })\n\n    await checkResponse(res)\n\n    const parser = new N3Parser({ factory: this.factory })\n\n    return parser.import(res.body)\n  }\n\n  /**\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='get']\n   * @return {Promise<Stream>}\n   */\n  async select (query, { headers, operation } = {}) {\n    const res = await super.select(query, { headers, operation })\n\n    await checkResponse(res)\n\n    const parser = new ResultParser({ factory: this.factory })\n\n    return res.body.pipe(parser)\n  }\n\n  /**\n   * @param {string} query SPARQL query\n   * @param {Object} [init]\n   * @param {HeadersInit} [init.headers] HTTP request headers\n   * @param {'get'|'postUrlencoded'|'postDirect'} [init.operation='postUrlencoded']\n   * @return {Promise<void>}\n   */\n  async update (query, { headers, operation } = {}) {\n    const res = await super.update(query, { headers, operation })\n\n    await checkResponse(res)\n  }\n}\n\nmodule.exports = StreamQuery\n"},"lineCount":95}},"error":null,"hash":"2d3af26ecd064ce5d42116ce53daf644","cacheData":{"env":{}}}